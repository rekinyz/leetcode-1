'use strict';

const assert = require('assert');
const _ = require('lodash');
const { isSubtree } = require('./');
const { makeTestTreeNodes } = require('../util');

describe('#isSubtree', () => {
  const tests = [
    {
      s: [3, 4, 5, 1, 2],
      t: [4, 1, 2],
      result: true,
    },
    {
      s: [3, 4, 5, 1, 2, null, null, null, null, 0],
      t: [4, 1, 2],
      result: false,
    },
    {
      s: [3, 4, 5, 1, null, 2],
      t: [3, 1, 2],
      result: false,
    },
    {
      s: [1, null],
      t: [3, 1, 2],
      result: false,
    },
    {
      s: [
        1,
        null,
        1,
        null,
        1,
        null,
        1,
        null,
        1,
        null,
        1,
        null,
        1,
        null,
        1,
        null,
        1,
        null,
        1,
        null,
        1,
        2,
      ],
      t: [1, null, 1, null, 1, null, 1, null, 1, null, 1, 2],
      result: true,
    },
    {
      s: [
        73,
        74,
        72,
        73,
        73,
        71,
        73,
        72,
        72,
        74,
        72,
        null,
        72,
        74,
        72,
        73,
        71,
        71,
        71,
        73,
        null,
        71,
        73,
        73,
        73,
        75,
        75,
        71,
        73,
        74,
        74,
        70,
        70,
        70,
        72,
        70,
        72,
        74,
        74,
        72,
        72,
        72,
        null,
        72,
        null,
        null,
        null,
        null,
        null,
        74,
        76,
        70,
        72,
        null,
        72,
        75,
        75,
        null,
        null,
        null,
        71,
        null,
        null,
        71,
        71,
        71,
        73,
        71,
        null,
        71,
        71,
        null,
        75,
        null,
        null,
        71,
        73,
        71,
        73,
        null,
        73,
        null,
        null,
        null,
        75,
        null,
        77,
        null,
        71,
        null,
        null,
        null,
        73,
        74,
        null,
        74,
        null,
        72,
        null,
        72,
        70,
        72,
        null,
        null,
        null,
        72,
        74,
        70,
        null,
        72,
        null,
        null,
        72,
        null,
        null,
        72,
        null,
        74,
        74,
        70,
        null,
        null,
        null,
        74,
        null,
        74,
        null,
        76,
        null,
        null,
        null,
        72,
        74,
        75,
        75,
        73,
        73,
        71,
        73,
        73,
        null,
        69,
        null,
        71,
        73,
        71,
        71,
        73,
        null,
        null,
        null,
        null,
        null,
        73,
        71,
        71,
        73,
        null,
        null,
        73,
        73,
        69,
        69,
        75,
        73,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        72,
        null,
        72,
        null,
        null,
        70,
        70,
        null,
        null,
        74,
        70,
        72,
        70,
        null,
        null,
        null,
        72,
        null,
        70,
        70,
        null,
        null,
        72,
        74,
        null,
        null,
        null,
        null,
        68,
        70,
        null,
        70,
        null,
        null,
        null,
        74,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        71,
        null,
        null,
        null,
        73,
        73,
        null,
        null,
        null,
        71,
        73,
        null,
        75,
        75,
        67,
        null,
        null,
        71,
        71,
        null,
        null,
        null,
        null,
        72,
        null,
        72,
        null,
        null,
        null,
        null,
        74,
        null,
        null,
        null,
        76,
        74,
        null,
        null,
        null,
        72,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        77,
        77,
        null,
        75,
        null,
        null,
        76,
        76,
        null,
        null,
        null,
        null,
        75,
        77,
        null,
        null,
        null,
        74,
      ],
      t: [72, 71, 71, 70, 72, 70, null, null, null, 71, null, null, null, null, 72],
      result: true,
    },
    {
      s: [
        3,
        2,
        4,
        1,
        3,
        3,
        5,
        0,
        0,
        2,
        4,
        4,
        4,
        4,
        null,
        1,
        -1,
        -1,
        null,
        1,
        1,
        5,
        3,
        3,
        3,
        5,
        5,
        3,
        3,
        2,
        2,
        null,
        null,
        null,
        0,
        0,
        2,
        2,
        null,
        null,
        6,
        2,
        4,
        2,
        4,
        4,
        2,
        4,
        4,
        4,
        6,
        4,
        4,
        null,
        4,
        3,
        null,
        null,
        3,
        -1,
        1,
        -1,
        1,
        1,
        3,
        null,
        1,
        null,
        5,
        1,
        null,
        null,
        5,
        null,
        null,
        3,
        3,
        5,
        5,
        1,
        null,
        null,
        5,
        3,
        null,
        null,
        null,
        null,
        7,
        5,
        5,
        3,
        5,
        3,
        5,
        4,
        null,
        null,
        null,
        null,
        -2,
        null,
        2,
        -2,
        null,
        null,
        null,
        null,
        0,
        2,
        4,
        null,
        null,
        4,
        4,
        null,
        null,
        6,
        null,
        4,
        4,
        2,
        4,
        null,
        null,
        4,
        null,
        2,
        2,
        6,
        6,
        4,
        4,
        6,
        8,
        null,
        4,
        null,
        null,
        2,
        null,
        4,
        null,
        null,
        null,
        null,
        null,
        3,
        5,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        1,
        null,
        5,
        null,
        3,
        null,
        null,
        5,
        null,
        3,
        null,
        null,
        5,
        null,
        null,
        null,
        null,
        null,
        5,
        1,
        null,
        1,
        3,
        null,
        null,
        5,
        7,
        5,
        null,
        5,
        5,
        null,
        null,
        null,
        9,
        null,
        5,
        1,
        null,
        3,
        5,
        null,
        null,
        null,
        null,
        null,
        2,
        null,
        4,
        null,
        null,
        null,
        null,
        null,
        null,
        4,
        null,
        null,
        6,
        null,
        null,
        null,
        null,
        2,
        null,
        6,
        4,
        6,
        null,
        4,
        null,
        6,
        null,
        null,
        4,
        null,
        8,
        null,
        null,
        0,
        2,
        null,
        2,
        6,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        7,
        null,
        null,
        5,
        7,
        null,
        5,
        null,
        null,
        null,
        3,
        null,
        null,
        5,
        null,
        null,
        null,
        null,
        1,
        1,
        null,
        1,
        null,
        7,
        null,
        null,
        null,
        null,
        4,
        6,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        2,
      ],
      t: [5, null, 4, 5],
      result: true,
    },
  ];
  makeTestTreeNodes(tests, 's');
  makeTestTreeNodes(tests, 't');

  _.forEach(tests, ({ s, _s, t, _t, result }) => {
    it(`${_s}, ${_t} -> ${result}`, () => {
      assert.deepStrictEqual(isSubtree(s, t), result);
    });
  });
});
